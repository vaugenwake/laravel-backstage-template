apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{values.name}}-api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: ${{values.name}}-api
  template:
    metadata:
      labels:
        app: ${{values.name}}-api
    spec:
      volumes:
        - name: bootstrap
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: sessions
          emptyDir: {}
        - name: views
          emptyDir: {}
      containers:
        - name: nginx
          image: ${{values.name}}-nginx:latest
          imagePullPolicy: Never
          resources:
            limits:
              memory: "30Mi"
              cpu: "80m"
          env:
            - name: PHP_FPM
              value: localhost:9000
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 10
        - name: php
          image: ${{values.name}}-php:latest
          imagePullPolicy: Never
          resources:
            limits:
              memory: "100Mi"
              cpu: "200m"
          envFrom:
            - configMapRef:
                name: ${{values.name}}
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 82
          volumeMounts:
            - name: bootstrap
              mountPath: /var/www/html/bootstrap/cache
            - name: cache
              mountPath: /var/www/html/storage/framework/cache
            - name: sessions
              mountPath: /var/www/html/storage/framework/sessions
            - name: views
              mountPath: /var/www/html/storage/framework/views
